/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/rooms/dining_room/scene.gltf --transform
Files: scene.gltf [68.08KB] > scene-transformed.glb [2.17MB] (-3092%)
Author: ChristyHsu (https://sketchfab.com/ida61xq)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/dining-room-kichen-baked-4831c2ce6a0044d9bee9eacefcc0f2bd
Title: Dining room | Kichen baked
*/

import React, { useCallback, useRef, useState } from 'react';
import { useGLTF } from '@react-three/drei'
import { Select } from '@react-three/postprocessing';
import { debounce } from 'leva/plugin';
import { useThree } from '@react-three/fiber';

export function DiningRoom(props) {
  const { nodes, materials } = useGLTF('/dining-room.glb')
    const [hovered, hover] = useState(null)
    const debouncedHover = useCallback(debounce(hover, 100), [])
    const over = (name) => (e) => (e.stopPropagation(), hover(name))

    return (
    <group { ...props } dispose={ null }>
      <mesh
        geometry={ nodes.house_Material009_0.geometry }
        material={ materials['Material.009'] }
        position={ [0, 1.513, -0.003] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ [3.962, 3.962, 1.5] }
      />
      <mesh
        geometry={ nodes.cabinet_Material015_0.geometry }
        material={ materials['Material.015'] }
        position={ [3.675, 3.002, 0.459] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ [0.344, 2.492, 0.036] }
      />
      <mesh
        geometry={ nodes.window_Material016_0.geometry }
        material={ materials['Material.016'] }
        rotation={ [-Math.PI / 2, 0, 0] }
      />
        <Select
          enabled={ hovered === "table" }
          onPointerOver={ over("table") }
          onPointerOut={ () => debouncedHover(null) }
        >
      <mesh
        geometry={ nodes.table_Material5001_0.geometry }
        material={ materials['Material5.001'] }
        position={ [0.831, 0.657, 0.247] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ [0.807, 0.807, 0.108] }
      />
        </Select>
      <mesh
        geometry={ nodes.floor_floor_0.geometry }
        material={ materials.floor }
        rotation={ [-Math.PI / 2, 0, 0] }
      />
      <mesh
        geometry={ nodes.jar4_Material017_0.geometry }
        material={ materials['Material.017'] }
        position={ [3.77, 0.943, 2.193] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ 0.078 }
      />
      <mesh
        geometry={ nodes.jar3_Material002_0.geometry }
        material={ materials['Material.002'] }
        position={ [3.834, 0.95, 2.39] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ 0.083 }
      />
      <mesh
        geometry={ nodes.vase_grey001_0.geometry }
        material={ materials['grey.001'] }
        position={ [0.853, 0.863, 0.641] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ 0.083 }
      />
      <mesh
        geometry={ nodes.faucet_Material006_0.geometry }
        material={ materials['Material.006'] }
        position={ [3.921, 0.95, 1.417] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ [0.002, 0.002, 0.016] }
      />
      <mesh
        geometry={ nodes.bowl_grey_0.geometry }
        material={ materials.grey }
        position={ [3.728, 0.991, 2.709] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ [0.165, 0.165, 0.127] }
      />
      <mesh
        geometry={ nodes.painting_Material010_0.geometry }
        material={ materials['Material.010'] }
        position={ [3.885, 1.176, -2.114] }
        rotation={ [-Math.PI / 2, 0.148, 0] }
        scale={ [0.027, 0.313, 0.313] }
      />
      <mesh
        geometry={ nodes.candle_Material013_0.geometry }
        material={ materials['Material.013'] }
        position={ [3.662, 1.16, -1.438] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ 0.038 }
      />
      <mesh
        geometry={ nodes.candle_Material008_0.geometry }
        material={ materials['Material.008'] }
        position={ [3.662, 1.16, -1.438] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ 0.038 }
      />
      <mesh
        geometry={ nodes.candle_Material007_0.geometry }
        material={ materials['Material.007'] }
        position={ [3.662, 1.16, -1.438] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ 0.038 }
      />
      <mesh
        geometry={ nodes.flower_leaf2_0.geometry }
        material={ materials.leaf2 }
        position={ [0.858, 0.883, 0.645] }
        rotation={ [-Math.PI / 2, 0, 0] }
      />
      <mesh
        geometry={ nodes.flower_leaf1_0.geometry }
        material={ materials.leaf1 }
        position={ [0.858, 0.883, 0.645] }
        rotation={ [-Math.PI / 2, 0, 0] }
      />
      <mesh
        geometry={ nodes.lighting_Material001_0.geometry }
        material={ materials['Material.001'] }
        position={ [1.888, 2.435, -0.266] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ [0.027, 0.027, 0.23] }
      />
      <mesh
        geometry={ nodes.lighting_Material003_0.geometry }
        material={ materials['Material.003'] }
        position={ [1.888, 2.435, -0.266] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ [0.027, 0.027, 0.23] }
      />
      <mesh
        geometry={ nodes.lighting_Material014_0.geometry }
        material={ materials['Material.014'] }
        position={ [1.888, 2.435, -0.266] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ [0.027, 0.027, 0.23] }
      />
      <mesh
        geometry={ nodes.IKEA_seat_wood__0.geometry }
        material={ materials.wood }
        position={ [3.636, 0.32, -3.314] }
        rotation={ [-Math.PI / 2, 0, -Math.PI / 2] }
        scale={ [0.175, 0.155, 0.155] }
      />

        <Select
          enabled={ hovered === "carpet" }
          onPointerOver={ over("carpet") }
          onPointerOut={ () => debouncedHover(null) }
        >
        <mesh
        geometry={ nodes.carpet_Carpet__0.geometry }
        material={ materials.Carpet }
        position={ [0.816, 0.024, 0.265] }
        rotation={ [-Math.PI / 2, 0, 0] }
        scale={ [1.908, 2.45, 0.005] }
      />
        </Select>
      <mesh
        geometry={ nodes.chopping_board1_Material1_0.geometry }
        material={ materials.Material1 }
        position={ [3.883, 0.979, 1.872] }
        rotation={ [-1.593, -1.28, -0.023] }
        scale={ [0.013, 0.015, 0.013] }
      />
      <mesh
        geometry={ nodes.chopping_board2_Material2_0.geometry }
        material={ materials.Material2 }
        position={ [3.916, 0.988, 1.944] }
        rotation={ [-1.6, -1.347, -0.03] }
        scale={ [0.014, 0.016, 0.014] }
      />
      <mesh
        geometry={ nodes.jar1_Material3_0.geometry }
        material={ materials.Material3 }
        position={ [3.752, 0.928, -1.088] }
        rotation={ [-Math.PI / 2, 0, -1.875] }
        scale={ 0.009 }
      />
      <mesh
        geometry={ nodes.jar2_Material4_0.geometry }
        material={ materials.Material4 }
        position={ [3.726, 0.972, -1.218] }
        rotation={ [-Math.PI / 2, 0, -1.247] }
        scale={ 0.008 }
      />
        <Select
          enabled={ hovered === "seat" }
          onPointerOver={ over("seat") }
          onPointerOut={ () => debouncedHover(null) }
        >
        <mesh
        geometry={ nodes.seat_Leather_0.geometry }
        material={ materials.Leather }
        position={ [0.817, 0.598, -1.277] }
        rotation={ [-Math.PI / 2, 0, -Math.PI / 2] }
        scale={ [0.253, 0.253, 0.027] }
      />
        </Select>
    </group>
  )
}

useGLTF.preload('/scene-transformed.glb')
